{"version":3,"sources":["components/Input.js","services/apiCalls.js","components/SingleSuggestion.js","components/SuggestionsList.js","components/Iframe.js","components/Loading.js","components/SingleMovie.js","components/Dashboard.js","App.js","index.js"],"names":["Input","input","onInputChange","type","value","onChange","required","placeholder","baseUrl","process","getMovies","movieTitle","a","axios","get","movie","data","getMovie","url","console","log","urlArray","split","title","filter","item","startsWith","join","year","find","movieData","getMovieTrailer","movieYear","modifiedMovieTrailer","replace","baseYoutubeUrl","movieTrailer","SingleSuggestion","onClickToMovie","Title","Poster","Year","className","to","trim","onClick","src","alt","SuggestionsList","useState","movies","setMovies","useEffect","then","res","Search","Array","isArray","map","uuid","Iframe","setUrl","items","id","videoId","allowFullScreen","Loading","SingleMovie","useParams","setMovieData","loading","setLoading","movieInfo","Actors","Director","Genre","Runtime","Plot","Country","Language","content","key","elem","push","movieInfoContent","Dashboard","setInput","e","target","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.693b40e5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Input({ input, onInputChange }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={onInputChange}\r\n        required={true}\r\n        placeholder=\"Type movie title here...\"\r\n      />\r\n      {/* <button type=\"button\" onClick={() => onClick(title)}>\r\n        Search\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = `http://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&`;\r\n\r\nconst apiKey = process.env.REACT_APP_OMDB_KEY;\r\n\r\nexport const getMovies = async (movieTitle) => {\r\n  const movie = await axios.get(`${baseUrl}s=${movieTitle}`);\r\n  return movie.data;\r\n};\r\n\r\nexport const getMovie = async (url) => {\r\n  console.log(url);\r\n  const urlArray = url.split(\" \");\r\n  const title = urlArray.filter((item) => !item.startsWith(\"&y=\")).join(\"+\");\r\n  const year = urlArray.find((item) => item.startsWith(\"&y=\"));\r\n  console.log(`title: ${title}`, `year: ${year}`);\r\n  const movieData = await axios.get(`${baseUrl}t=${title}${year}`);\r\n  return movieData.data;\r\n};\r\n\r\nexport const getMovieTrailer = async (movieTitle, movieYear) => {\r\n  console.log(console.log(movieTitle, movieYear));\r\n  const modifiedMovieTrailer = movieTitle.replace(/ /gi, \"%20\");\r\n  const baseYoutubeUrl = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&part=id&maxResults=1&q=${modifiedMovieTrailer}%20${movieYear}%20movie%20trailer&key=${process.env.REACT_APP_YOUTUBE_KEY}`;\r\n  console.log(baseYoutubeUrl);\r\n  const movieTrailer = await axios.get(baseYoutubeUrl);\r\n  return movieTrailer.data;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SingleSuggestion({ movieData, onClickToMovie }) {\r\n  console.log(onClickToMovie);\r\n  const { Title, Poster, Year } = movieData;\r\n  return (\r\n    <div className=\"suggestion\">\r\n      <Link to={`/${Title.trim()}%20&y=${Year}`} onClick={onClickToMovie}>\r\n        <h4>\r\n          {Title} <span>Year: {Year}</span>\r\n        </h4>\r\n        <img src={Poster} alt={`${Title}'s Poster`} />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleSuggestion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getMovies } from \"../services/apiCalls\";\r\nimport SingleSuggestion from \"./SingleSuggestion\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nfunction SuggestionsList({ input, onClickToMovie }) {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    if (input) {\r\n      getMovies(input)\r\n        .then((res) => res.Search)\r\n        .then((data) => {\r\n          if (Array.isArray(data)) {\r\n            setMovies(data);\r\n          }\r\n        });\r\n    }\r\n  }, [input]);\r\n\r\n  return (\r\n    <div className=\"suggestions\">\r\n      {movies.map((movie) => (\r\n        <SingleSuggestion\r\n          movieData={movie}\r\n          key={uuid()}\r\n          onClickToMovie={onClickToMovie}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuggestionsList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getMovieTrailer } from \"../services/apiCalls\";\r\n\r\nfunction Iframe({ title, year }) {\r\n  const [url, setUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    getMovieTrailer(title, year).then((data) => {\r\n      setUrl(`https://youtube.com/embed/${data.items[0].id.videoId}`);\r\n    });\r\n  }, []);\r\n  return (\r\n    <iframe src={url} title=\"Youtube Trailer\" allowFullScreen={true}></iframe>\r\n  );\r\n}\r\n\r\nexport default Iframe;\r\n","import React from \"react\";\r\nimport { VscLoading } from \"react-icons/vsc\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"loading-page\">\r\n      <VscLoading />\r\n      <p>Please wait...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getMovie } from \"../services/apiCalls\";\r\nimport Iframe from \"./Iframe\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction SingleMovie() {\r\n  const { id } = useParams();\r\n  const [movieData, setMovieData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const { Poster, Title, Year } = movieData;\r\n  const movieInfo = {\r\n    Year: movieData.Year,\r\n    Actors: movieData.Actors,\r\n    Director: movieData.Director,\r\n    Genre: movieData.Genre,\r\n    Runtime: movieData.Runtime,\r\n    Plot: movieData.Plot,\r\n    Country: movieData.Country,\r\n    Language: movieData.Language,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovie(id).then((data) => {\r\n      setMovieData(data);\r\n      setLoading(false);\r\n    });\r\n  }, [id]);\r\n\r\n  const movieInfoContent = () => {\r\n    const content = [];\r\n    for (let key in movieInfo) {\r\n      const elem = (\r\n        <p key={key}>\r\n          <strong>{key}</strong>: {movieInfo[key]}\r\n        </p>\r\n      );\r\n      content.push(elem);\r\n    }\r\n    return content;\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <section>\r\n      <div className=\"single-movie\">\r\n        <div className=\"single-movie-img\">\r\n          <img src={Poster} alt={`${Title} movie's Poster`} />\r\n        </div>\r\n        <div className=\"single-movie-content\">\r\n          <h2>{Title}</h2>\r\n          <article className=\"movie-info\">{movieInfoContent()}</article>\r\n        </div>\r\n      </div>\r\n      <div className=\"single-movie-trailer\">\r\n        <Iframe title={Title} year={Year} />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SingleMovie;\r\n","// // import React from \"react\";\r\n// // import Input from \"./Input\";\r\n\r\n// // function Dashboard({ movie }) {\r\n// //   console.log(movie);\r\n// //   const newMovie = { ...movie };\r\n// //   const { Poster, Ratings } = movie;\r\n// //   delete newMovie.Poster;\r\n// //   delete newMovie.Ratings;\r\n// //   const generalInfoContent = [];\r\n// //   for (let key in newMovie) {\r\n// //     const info = (\r\n// //       <div key={key}>\r\n// //         {key}: {newMovie[key]}\r\n// //       </div>\r\n// //     );\r\n// //     generalInfoContent.push(info);\r\n// //   }\r\n// //   return (\r\n// //     <div className=\"container\">\r\n// //       <img src={Poster} alt=\"Show poster\" height=\"auto\" width=\"220px\" />\r\n// //       <div className=\"general-info\">{generalInfoContent}</div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Dashboard;\r\n\r\n// import React, {useState} from 'react'\r\n// import Input from './Input'\r\n\r\n// function Dashboard() {\r\n//   const [moviesData, setMovieData] = useState();\r\n//   const onClick = (movieTitle) => {\r\n//     console.log(movieTitle);\r\n//     const modifiedMovieTitle = movieTitle.replace(/ /gi, \"+\");\r\n//     getMovie(modifiedMovieTitle)\r\n//       .then((data) => setMovieData(data))\r\n//       .catch((err) => console.error(err));\r\n//   };\r\n//   return (\r\n//     <div>\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Dashboard\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Input from \"./Input\";\r\nimport SuggestionsList from \"./SuggestionsList\";\r\nimport SingleMovie from \"./SingleMovie\";\r\n\r\nfunction Dashboard() {\r\n  const [input, setInput] = useState(\"\");\r\n  const onInputChange = (e) => setInput(e.target.value);\r\n  const onClickToMovie = (e) => setInput(\"\");\r\n  return (\r\n    <section>\r\n      <Input input={input} onInputChange={onInputChange} />\r\n      {input && (\r\n        <SuggestionsList input={input} onClickToMovie={onClickToMovie} />\r\n      )}\r\n      {!input && <Route exact path=\"/:id\" component={SingleMovie} />}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Input from \"./components/Input\";\nimport Iframe from \"./components/Iframe\";\nimport { getMovie } from \"./services/apiCalls\";\nimport SingleMovie from \"./components/SingleMovie\";\nimport { Route } from \"react-router\";\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard />\n      {/* {movieData && <Iframe title={title} />} */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}